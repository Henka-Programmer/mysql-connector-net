//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Data.Entity.Core.EntityClient;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: global::System.Data.Entity.Core.Objects.DataClasses.EdmSchemaAttribute()]
[assembly: global::System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute("juliotestsModel", "FK_ORDER_CUSTOMER", "customer", global::System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MySql.Data.Entity.Tests.customer), "order", global::System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MySql.Data.Entity.Tests.order))]


#endregion

namespace MySql.Data.Entity.Tests
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class model2Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new model2Entities object using the connection string found in the 'model2Entities' section of the application configuration file.
        /// </summary>
        public model2Entities() : base("name=model2Entities", "model2Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new model2Entities object.
        /// </summary>
        public model2Entities(string connectionString) : base(connectionString, "model2Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new model2Entities object.
        /// </summary>
        public model2Entities(EntityConnection connection) : base(connection, "model2Entities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<customer> customer
        {
            get
            {
                if ((_customer == null))
                {
                    _customer = base.CreateObjectSet<customer>("customer");
                }
                return _customer;
            }
        }
        private ObjectSet<customer> _customer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<order> order
        {
            get
            {
                if ((_order == null))
                {
                    _order = base.CreateObjectSet<order>("order");
                }
                return _order;
            }
        }
        private ObjectSet<order> _order;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the customer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocustomer(customer customer)
        {
            base.AddObject("customer", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the order EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorder(order order)
        {
            base.AddObject("order", order);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="juliotestsModel", Name="customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new customer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static customer Createcustomer(global::System.Int32 id)
        {
            customer customer = new customer();
            customer.Id = id;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("juliotestsModel", "FK_ORDER_CUSTOMER", "order")]
        public EntityCollection<order> order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("juliotestsModel.FK_ORDER_CUSTOMER", "order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("juliotestsModel.FK_ORDER_CUSTOMER", "order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="juliotestsModel", Name="order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new order object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="order_Date">Initial value of the Order_Date property.</param>
        public static order Createorder(global::System.Int32 id, global::System.DateTime order_Date)
        {
            order order = new order();
            order.Id = id;
            order.Order_Date = order_Date;
            return order;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Order_Date
        {
            get
            {
                return _Order_Date;
            }
            set
            {
                OnOrder_DateChanging(value);
                ReportPropertyChanging("Order_Date");
                _Order_Date = StructuralObject.SetValidValue(value, "Order_Date");
                ReportPropertyChanged("Order_Date");
                OnOrder_DateChanged();
            }
        }
        private global::System.DateTime _Order_Date;
        partial void OnOrder_DateChanging(global::System.DateTime value);
        partial void OnOrder_DateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("juliotestsModel", "FK_ORDER_CUSTOMER", "customer")]
        public customer customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("juliotestsModel.FK_ORDER_CUSTOMER", "customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("juliotestsModel.FK_ORDER_CUSTOMER", "customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<customer> customerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customer>("juliotestsModel.FK_ORDER_CUSTOMER", "customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<customer>("juliotestsModel.FK_ORDER_CUSTOMER", "customer", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
